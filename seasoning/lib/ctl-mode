# /usr/lib/seasoning/ctl-mode
#!/usr/bin/env bash
# Persist and cycle "mode" per plugin id and output; then signal Waybar.
set -euo pipefail

sig_for() {
  local id="${1:-}"
  # Allow override: --signal N
  if [[ "${SIGNAL_OVERRIDE:-}" =~ ^[0-9]+$ ]]; then echo "$SIGNAL_OVERRIDE"; return; fi
  case "$id" in
    *left*|*right*) echo 5 ;;
    *clock*|hms|barclock-sextants) echo 6 ;;
    *) echo 5 ;;
  esac
}

usage(){ echo "usage: ctl-mode {get|set|cycle} <plugin-id> [--output NAME] [--signal N] [value]"; exit 2; }

[[ $# -ge 2 ]] || usage
cmd="$1"; shift
plugin="$1"; shift

OUT="${WAYBAR_OUTPUT_NAME:-default}"
SIGNAL_OVERRIDE=""
while [[ $# -gt 0 ]]; do
  case "$1" in
    --output) OUT="$2"; shift 2 ;;
    --signal) SIGNAL_OVERRIDE="$2"; shift 2 ;;
    *) val="${1-}"; shift ;;
  esac
done

state_dir="${HOME}/.cache/seasoning/${OUT}"
mkdir -p "$state_dir"
file="${state_dir}/mode.${plugin}"

current=$(cat "$file" 2>/dev/null || echo 0)

case "$cmd" in
  get)
    echo "${current}"
    ;;
  set)
    : "${val:?value required}"; echo "${val}" >"$file"
    kill -RTMIN+"$(sig_for "$plugin")" $(pidof -x waybar) 2>/dev/null || true
    ;;
  cycle)
    next=$(( current + 1 ))
    echo "${next}" >"$file"
    kill -RTMIN+"$(sig_for "$plugin")" $(pidof -x waybar) 2>/dev/null || true
    ;;
  *) usage ;;
esac
